name: Test

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      docker_tag: ${{ steps.docker_tag.outputs.tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check if relevant files changed
      id: changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          relevant:
            - '.devcontainer/Dockerfile'

    - name: Exit if no relevant changes
      if: steps.changes.outputs.relevant != 'true'
      run: |
        echo "No relevant changes. Skipping build."

    - name: Get branch name slug
      id: slug
      run: |
        branch="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
        slug=$(echo -n "$branch" | tr '[:upper:]' '[:lower:]' | tr -cs '[:alnum:]' '-')
        echo "slugged_branch=$slug" >> $GITHUB_OUTPUT

    - name: Set Docker tag
      id: docker_tag
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
        elif [[ "${{ steps.changes.outputs.relevant }}" == "true" ]]; then
          echo "tag=${{ steps.slug.outputs.slugged_branch }}" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
        fi

    - name: Login to Docker Hub
      if: steps.changes.outputs.relevant == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      if: steps.changes.outputs.relevant == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      if: steps.changes.outputs.relevant == 'true'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: .devcontainer/Dockerfile
        push: true
        tags: andreiavrammsd/bazel-to-cmake-integration:${{ steps.docker_tag.outputs.tag }}
        cache-from: |
          type=registry,ref=andreiavrammsd/bazel-to-cmake-integration:cache
          type=registry,ref=andreiavrammsd/bazel-to-cmake-integration:cache-${{ steps.slug.outputs.slugged_branch }}
        cache-to: type=registry,ref=andreiavrammsd/bazel-to-cmake-integration:cache-${{ steps.slug.outputs.slugged_branch }},mode=max

  test:
    runs-on: ubuntu-latest
    needs: build

    container:
      image: andreiavrammsd/bazel-to-cmake-integration:${{ needs.build.outputs.docker_tag }}
      options: --user root -v ${{ github.workspace }}:/workspace/:rw

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run tests
      run: make test
